name: Atualizar dados SUSEP

on:
  schedule:
    - cron: '0 9 * * 1'  # toda segunda-feira às 9h UTC (4h BRT)
  workflow_dispatch: # Permite a execução manual do workflow

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Necessário para commit/push, upload de assets em releases e para criar releases
      # A linha 'releases: write' foi removida, pois 'contents: write' já abrange esta funcionalidade.

    steps:
      - name: Clonar repositório
        uses: actions/checkout@v3

      - name: Configurar Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Instalar dependências
        # Consolidado todas as dependências em uma única linha
        run: pip install pandas openpyxl xlrd requests certifi urllib3

      - name: Configurar Git LFS
        # Garante que o Git LFS esteja instalado e inicializado
        # e informa quais arquivos ele deve rastrear (.csv na pasta data/)
        run: |
          git lfs install
          git lfs track "data/*.csv"
          # Adiciona o .gitattributes ao stage para que seja comitado
          git add .gitattributes || true # '|| true' para evitar falha se não houver alterações

      - name: Rodar script de atualização
        run: python scripts/main.py

      - name: Commit e push dos arquivos extraídos
        # Configura o usuário Git e tenta comitar/pushar as alterações (incluindo .gitattributes e CSVs LFS)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          # Adiciona todos os CSVs recém-criados e o .gitattributes (se modificado)
          git add .gitattributes data/*.csv || true
          # Verifica se há alterações para comitar antes de tentar o commit e push
          git diff --cached --quiet || (git commit -m "Atualização automática dos dados SUSEP" && git push)

      - name: Criar GitHub Release com CSVs
        if: success()
        id: create_release
        uses: actions/create-release@v1.1.6 # <--- ATUALIZE AQUI PARA V1.1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: data-${{ github.run_number }}
          release_name: Dados SUSEP - ${{ github.event.release.tag_name }}
          draft: false
          prerelease: false

      - name: Upload Ses_cias.csv para o Release
        # Faz o upload do Ses_cias.csv como um asset do release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # URL de upload obtida do passo anterior
          asset_path: ./data/Ses_cias.csv # Caminho do arquivo a ser uploadado
          asset_name: Ses_cias.csv # Nome que o arquivo terá no release
          asset_content_type: text/csv # Tipo de conteúdo

      - name: Upload Ses_ramos.csv para o Release
        # Faz o upload do Ses_ramos.csv como um asset do release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./data/Ses_ramos.csv
          asset_name: Ses_ramos.csv
          asset_content_type: text/csv

      - name: Upload Ses_seguros.csv para o Release
        # Faz o upload do Ses_seguros.csv como um asset do release
        if: success()
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./data/Ses_seguros.csv
          asset_name: Ses_seguros.csv
          asset_content_type: text/csv
